# 理论到实践映射工具配置文件
# Theory to Practice Mapping Tool Configuration

# 基本配置
basic:
  name: "理论到实践映射工具"
  version: "1.0.0"
  description: "将形式化理论概念转换为具体编程实现的工具"

# 支持的语言
supported_languages:
  - rust
  - python
  - go
  - java
  - cpp
  - typescript

# 理论概念类型
concept_types:
  state_machine:
    name: "状态机理论"
    description: "有限状态机及其变体"
    patterns:
      - "状态机"
      - "状态转换"
      - "有限状态机"
      - "FSM"
  
  petri_net:
    name: "Petri网理论"
    description: "Petri网及其扩展"
    patterns:
      - "Petri网"
      - "库所"
      - "变迁"
      - "令牌"
  
  temporal_logic:
    name: "时态逻辑理论"
    description: "线性时态逻辑和分支时态逻辑"
    patterns:
      - "时态逻辑"
      - "LTL"
      - "CTL"
      - "时序性质"
  
  type_theory:
    name: "类型理论"
    description: "类型系统和类型安全"
    patterns:
      - "类型理论"
      - "类型系统"
      - "类型安全"
      - "类型检查"
  
  formal_verification:
    name: "形式验证理论"
    description: "模型检查和定理证明"
    patterns:
      - "形式验证"
      - "模型检查"
      - "定理证明"
      - "性质验证"

# 代码生成模板
code_templates:
  rust:
    state_machine: "templates/rust/state_machine.rs"
    petri_net: "templates/rust/petri_net.rs"
    temporal_logic: "templates/rust/temporal_logic.rs"
    type_theory: "templates/rust/type_theory.rs"
    formal_verification: "templates/rust/verification.rs"
  
  python:
    state_machine: "templates/python/state_machine.py"
    petri_net: "templates/python/petri_net.py"
    temporal_logic: "templates/python/temporal_logic.py"
    type_theory: "templates/python/type_theory.py"
    formal_verification: "templates/python/verification.py"
  
  go:
    state_machine: "templates/go/state_machine.go"
    petri_net: "templates/go/petri_net.go"
    temporal_logic: "templates/go/temporal_logic.go"
    type_theory: "templates/go/type_theory.go"
    formal_verification: "templates/go/verification.go"

# 输出配置
output:
  default_directory: "output/implementations"
  create_subdirectories: true
  include_tests: true
  include_documentation: true
  include_examples: true
  file_naming:
    code: "implementation_{index}.{ext}"
    test: "test_{index}.{ext}"
    documentation: "documentation_{index}.md"
    example: "example_{index}_{example_index}.{ext}"

# 验证规则
validation_rules:
  - name: "语义一致性检查"
    description: "检查生成的代码是否保持理论概念的语义"
    enabled: true
  
  - name: "语法正确性检查"
    description: "检查生成的代码语法是否正确"
    enabled: true
  
  - name: "类型安全性检查"
    description: "检查生成的代码类型是否安全"
    enabled: true
  
  - name: "性能分析"
    description: "分析生成代码的性能特征"
    enabled: false

# 日志配置
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: "logs/mapping_tool.log"
  max_size: "10MB"
  backup_count: 5

# 性能配置
performance:
  max_concurrent_generations: 4
  timeout_seconds: 300
  memory_limit_mb: 512
  enable_caching: true
  cache_size: 1000

# 扩展配置
extensions:
  enable_plugins: true
  plugin_directory: "plugins"
  auto_load_plugins: true
  
  # 内置扩展
  builtin_extensions:
    - "ai_assisted_mapping"
    - "quantum_computing_mapping"
    - "distributed_systems_mapping"
    - "workflow_engine_mapping"

# 质量保证
quality_assurance:
  enable_automated_testing: true
  test_coverage_threshold: 80
  code_quality_checks:
    - "cyclomatic_complexity"
    - "code_duplication"
    - "naming_conventions"
    - "documentation_coverage"
  
  performance_benchmarks:
    - "execution_time"
    - "memory_usage"
    - "cpu_utilization"
    - "throughput"

# 集成配置
integrations:
  ide:
    vscode:
      enabled: true
      extension_id: "theory-mapping-tool"
      commands:
        - "mapTheory"
        - "validateMapping"
        - "generateTests"
    
    intellij:
      enabled: false
      plugin_id: "theory-mapping-tool"
  
  ci_cd:
    github_actions:
      enabled: true
      workflow_file: ".github/workflows/theory-mapping.yml"
    
    gitlab_ci:
      enabled: false
      config_file: ".gitlab-ci.yml"
  
  version_control:
    git:
      enabled: true
      auto_commit: false
      branch_naming: "feature/theory-mapping-{timestamp}"
    
    svn:
      enabled: false

# 用户界面配置
ui:
  theme: "auto"
  language: "zh-CN"
  enable_dark_mode: true
  show_progress_bars: true
  enable_notifications: true
  
  # 编辑器配置
  editor:
    font_family: "Consolas, 'Courier New', monospace"
    font_size: 14
    tab_size: 4
    enable_syntax_highlighting: true
    enable_auto_completion: true
    enable_error_highlighting: true

# 安全配置
security:
  enable_code_signing: false
  enable_dependency_scanning: true
  enable_vulnerability_checking: true
  allowed_file_extensions:
    - ".rs"
    - ".py"
    - ".go"
    - ".java"
    - ".cpp"
    - ".ts"
    - ".md"
    - ".yaml"
    - ".json"
  
  restricted_operations:
    - "file_system_access"
    - "network_access"
    - "process_execution"
    - "environment_variables" 